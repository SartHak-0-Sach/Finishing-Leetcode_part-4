#!/bin/bash

# Define array of names
names=("602_Friend_Requests_II_Who_Has_the_Most_Friends" "603_Consecutive_Available_Seats" "604_Design_Compressed_String_Iterator" "605_Can_Place_Flowers" "606_Construct_String_from_Binary_Tree" "607_Sales_by_Day_of_the_Week" "608_Tree_Node" "609_Find_Duplicate_File_in_System" "610_Triangle_Judgement" "611_Valid_Triangle_Number" "612_Shortest_Distance_in_a_Plane" "613_Shortest_Distance_in_a_Line" "614_Second_Degree_Follower" "615_Average_Salary_Departments_VS_Company" "616_Add_Bold_Tag_in_String" "617_Merge_Two_Binary_Trees" "618_Students_Report_By_Geography" "619_Biggest_Single_Number" "620_Not_Boring_Movies" "621_Task_Scheduler" "622_Design_Circular_Queue" "623_Add_One_Row_to_Tree" "624_Maximum_Distance_in_Arrays" "625_Minimum_Factorization" "626_Exchange_Seats" "627_Swap_Salary" "628_Maximum_Product_of_Three_Numbers" "629_K_Inverse_Pairs_Array" "630_Course_Schedule_III" "631_Design_Excel_Sum_Formula" "632_Smallest_Range" "633_Sum_of_Square_Numbers" "634_Find_the_Derangement_of_An_Array" "635_Design_Log_Storage_System" "636_Exclusive_Time_of_Functions" "637_Average_of_Levels_in_Binary_Tree" "638_Shopping_Offers" "639_Decode_Ways_II" "640_Solve_the_Equation" "641_Design_Circular_Deque" "642_Design_Search_Autocomplete_System" "643_Maximum_Average_Subarray_I" "644_Maximum_Average_Subarray_II" "645_Set_Mismatch" "646_Maximum_Length_of_Pair_Chain" "647_Palindromic_Substrings" "648_Replace_Words" "649_Dota2_Senate" "650_2_Keys_Keyboard" "651_4_Keys_Keyboard" "652_Find_Duplicate_Subtrees" "653_Two_Sum_IV_-_Input_is_a_BST" "654_Maximum_Binary_Tree" "655_Print_Binary_Tree" "656_Coin_Path" "657_Judge_Route_Circle" "658_Find_K_Closest_Elements" "659_Split_Array_into_Consecutive_Subsequences" "660_Remove_9" "661_Image_Smoother" "662_Maximum_Width_of_Binary_Tree" "663_Equal_Tree_Partition" "664_Strange_Printer" "665_Non-decreasing_Array" "666_Path_Sum_IV" "667_Beautiful_Arrangement_II" "668_Kth_Smallest_Number_in_Multiplication_Table" "669_Trim_a_Binary_Search_Tree" "670_Maximum_Swap" "671_Second_Minimum_Node_In_a_Binary_Tree" "672_Bulb_Switcher_II" "673_Number_of_Longest_Increasing_Subsequence" "674_Longest_Continuous_Increasing_Subsequence" "675_Cut_Off_Trees_for_Golf_Event" "676_Implement_Magic_Dictionary" "677_Map_Sum_Pairs" "678_Valid_Parenthesis_String" "679_24_Game" "680_Valid_Palindrome_II" "681_Next_Closest_Time" "682_Baseball_Game" "683_K_Empty_Slots" "684_Redundant_Connection" "685_Redundant_Connection_II" "686_Repeated_String_Match" "687_Longest_Univalue_Path" "688_Knight_Probability_in_Chessboard" "689_Maximum_Sum_of_3_Non-Overlapping_Subarrays" "690_Employee_Importance" "691_Stickers_to_Spell_Word" "692_Top_K_Frequent_Words" "693_Binary_Number_with_Alternating_Bits" "694_Number_of_Distinct_Islands" "695_Max_Area_of_Island" "696_Count_Binary_Substrings" "697_Degree_of_an_Array" "698_Partition_to_K_Equal_Sum_Subsets" "699_Falling_Squares" "700_Search_in_a_Binary_Search_Tree" "701_Insert_into_a_Binary_Search_Tree")

# Path to the folder
folder_path="C:/Users/saksh/OneDrive/Desktop/github/Finishing-Leetcode"

# Loop through folders and rename
for ((i=602; i<=701; i++)); do
    folder_name=$(printf "%04d-" "$i")  # Pad the number with zeros
    if [ -d "$folder_path/$folder_name" ]; then
        new_name="${names[i-602]}-${folder_name#*-}"  # Extract the number after the hyphen
        mv "$folder_path/$folder_name" "$folder_path/$new_name"
        echo "Renamed: $folder_name to $new_name"
    fi
done
